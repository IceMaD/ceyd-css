$base-text-color: black !default;
$base-font-family: sans-serif !default;
$base-font-size: 1.4rem;
$base-media-queries: () !default;

$ceyd-prefix: '';

%scope-reset {
    $color: $base-text-color;
    $font-family: $base-font-family;

    display: block;
    color: $color;
    direction: ltr;
    font-family: $font-family;
    font-size: $base-font-size;
    font-style: normal;
    font-weight: 300;
    letter-spacing: 0;
    line-height: 1;
    text-align: left;
    text-indent: 0;
    text-transform: none;
    visibility: visible;
    white-space: normal;
    word-spacing: normal;
    margin: 0 !important;
}

@mixin component($name) {

    @if & {

        @error 'Component should not have a parent';

    } @else {

        .#{if($ceyd-prefix and $ceyd-prefix != '', $ceyd-prefix + '-', '') + $name} {

            $component: '.#{$name}' !global; // See https://github.com/sass/sass/issues/871

            @extend %scope-reset;
            @content;
        }
    }
}

@mixin child($name) {

    @if & {

        &_#{$name} {

            @content
        }

    } @else {

        @error 'Children should have a parent';
    }
}

@mixin modifier($name, $media: ()) {

    @if & {

        &.\--#{'' + $name} {

            @content
        }

        @each $medium in $media {

            @if(map_has_key($base-media-queries, $medium)) {
                @media #{map_get($base-media-queries, $medium)} {

                    &.\--#{$name}\@#{$medium} {

                        @content
                    }
                }
            }

            @else {

                @warn 'Unknown media query #{$medium} for element #{&} with modifier #{$name}, skipping.';
            }
        }
    }

    @else {

        @error 'Modifiers should have a parent';
    }
}
